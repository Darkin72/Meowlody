# syntax=docker/dockerfile:1

ARG NODE_VERSION=22.13.1

FROM node:${NODE_VERSION} as build

# Set working directory for all build stages.
WORKDIR /app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage bind mounts to package.json and package-lock.json to avoid having to copy them
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci

# Copy the rest of the source files into the image.
COPY . .

# Run the build script.
RUN npm run build

################################################################################
# Run by serve
FROM node:${NODE_VERSION} AS final

WORKDIR /app

# Install serve
RUN npm install -g serve

# Copy files
COPY --from=build /app/dist /dist

# Expose the port that the application listens on.
EXPOSE 8888

# Run the application.
CMD ["serve", "-s", "/dist", "-l", "8888"]
